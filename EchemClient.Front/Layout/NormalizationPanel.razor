
<MudPaper Class="mb-1" Outlined="true" Style="width:760px; height:150px;">
    <MudStack Class="pa-0" Row="true" Justify="Justify.SpaceEvenly" AlignItems="AlignItems.Center">
        <MudStack Justify="Justify.FlexStart" Style="height:inherit">
            <MudCheckBox Class="mb-n3" @bind-Checked="@ViewModel.ReferenceNormalization" Label="Reference" LabelPosition="LabelPosition.End" Color="Color.Primary"></MudCheckBox>
            <MudCheckBox Class="mb-n3" @bind-Checked="@ViewModel.ScanRateNormalization" Label="Scan rate" LabelPosition="LabelPosition.End" Color="Color.Primary"></MudCheckBox>
            <MudCheckBox Class="mb-n3" @bind-Checked="@ViewModel.ElectrolyteConcentrationNormalization" Label="Electrolyte concentration" LabelPosition="LabelPosition.End"
                         Color="Color.Primary"></MudCheckBox>
        </MudStack>

        <MudStack Justify="Justify.FlexStart" Style="height:inherit">
            <MudSelect @bind-Value="@ViewModel.SelectedReference" Label="Select a reference" Variant="Variant.Outlined" Clearable="true" Disabled="@(!ViewModel.ReferenceNormalization)" 
                       Style="height:55px; width:240px;" Class="mt-3 mb-n7">
                       <Virtualize Items="@ViewModel.Refs" Context="reference">
                           <MudSelectItem Value="reference.Key">
                               <MudText> @reference.Key</MudText>
                           </MudSelectItem>
                       </Virtualize>
            </MudSelect>
            <MudTextField @bind-Value="@ViewModel.SelectedScanRate" Label="Reference scan rate in V/s" Variant="Variant.Outlined" Clearable="true" Disabled="@(!ViewModel.ScanRateNormalization)"
                          Style="height:55px; width:240px;" Immediate="true"></MudTextField>
        </MudStack>

        <MudStack Justify="Justify.Center" Style="height:inherit">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@NormalizeData">Normalize</MudButton>
        </MudStack>
    </MudStack>
</MudPaper>

@code {

    [Parameter]
    public IMultiplotViewModel ViewModel { get; set; } = default!;

    [Parameter]
    public EventCallback OnFunctionExecuted { get; set; }

    private async Task NormalizeData()
    {
        ViewModel.NormalizeData();
        await OnFunctionExecuted.InvokeAsync(null);
    }
}
