
<MudStack AlignItems="AlignItems.Center">
    <MudTabs Class="ml-5" Elevation="0" Rounded="true" Centered="true" Color="@Color.Primary" Style="width:600px;">
        <MudTabPanel Text="Electrochemical system">
            <MudPaper Class="pa-5 mt-n1" Square="false" Outlined="true" Style="height:590px; overflow:auto;">
                <MudText><b>- Working electrode (@Entry.We_Electrode.Name):</b></MudText>
                <MudText Class="ml-5"><b>Material:</b> @Entry.We_Electrode.Material</MudText>
                    <MudText Class="ml-5"><b>Crystallographic orientation:</b> @Entry.We_Electrode.CrystallographicOrientation</MudText>
                    @if (!string.IsNullOrEmpty(Entry.We_Electrode.GeometricElectrolyteContactArea))
                {
                    <MudText Class="ml-5"><b>Geometric electrolyte contact area:</b> @Entry.We_Electrode.GeometricElectrolyteContactArea</MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.We_Electrode.PreparationProcedure))
                {
                    <MudText Class="ml-5"><b>Preparation procedure:</b> @Entry.We_Electrode.PreparationProcedure</MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.We_Electrode.Shape?.Diameter?.Unit) || !string.IsNullOrEmpty(Entry.We_Electrode.Shape?.Height?.Unit)
                || !string.IsNullOrEmpty(Entry.We_Electrode.Shape?.Type))
                {
                    <MudText Class="ml-5"><b>Shape:</b></MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.We_Electrode.Shape?.Diameter?.Unit))
                {
                    <MudText Class="ml-10"><b>Diameter:</b></MudText>
                    <MudText Class="pl-5 ml-10"><b>Unit:</b> @Entry.We_Electrode.Shape?.Diameter?.Unit</MudText>
                    <MudText Class="pl-5 ml-10"><b>Value:</b> @Entry.We_Electrode.Shape?.Diameter?.Value</MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.We_Electrode.Shape?.Height?.Unit))
                {
                    <MudText Class="ml-10"><b>Height:</b></MudText>
                    <MudText Class="pl-5 ml-10"><b>Unit:</b> @Entry.We_Electrode.Shape?.Height?.Unit</MudText>
                    <MudText Class="pl-5 ml-10"><b>Value:</b> @Entry.We_Electrode.Shape?.Height?.Value</MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.We_Electrode.Shape?.Type))
                {
                    <MudText Class="ml-10"><b>Type:</b>  @Entry.We_Electrode.Shape?.Type</MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.We_Electrode.Source?.Supplier))
                {
                    <MudText Class="ml-5"><b>Source:</b></MudText>
                    <MudText Class="ml-10"><b>Supplier:</b> @Entry.We_Electrode.Source?.Supplier</MudText>
                }

                <MudText Class="mt-5"><b>- Reference electrode (@Entry.Ref_Electrode.Name):</b></MudText>
                <MudText Class="ml-5"><b>Type:</b> @Entry.Ref_Electrode.Type</MudText>
                    @if (!string.IsNullOrEmpty(Entry.Ref_Electrode.Source))
                {
                    <MudText Class="ml-5"><b>Source:</b> @Entry.Ref_Electrode.Source</MudText>
                }
                @if (!string.IsNullOrEmpty(Entry.Ref_Electrode.Supplier))
                {
                    <MudText Class="ml-5"><b>Supplier:</b> @Entry.Ref_Electrode.Supplier</MudText>
                }

                <MudText Class="mt-5"><b>- Counter electrode (@Entry.Ce_Electrode?.Name):</b></MudText>
                <MudText Class="ml-5"><b>Material:</b> @Entry.Ce_Electrode?.Material</MudText>
                    @if (!string.IsNullOrEmpty(Entry.Ce_Electrode?.CrystallographicOrientation))
                {
                    <MudText Class="ml-5"><b>Crystallographic orientation:</b> @Entry.Ce_Electrode?.CrystallographicOrientation</MudText>
                }
                <MudText Class="ml-5"><b>Shape:</b> @Entry.Ce_Electrode?.Shape</MudText>
                    @if (!string.IsNullOrEmpty(Entry.Ce_Electrode?.Supplier))
                {
                    <MudText Class="ml-5"><b>Supplier:</b> @Entry.Ce_Electrode?.Supplier</MudText>
                }

                <MudText Class="mt-5"><b>- Electrolyte:</b></MudText>
                <MudText Class="ml-5"><b>Components:</b></MudText>
                @foreach (var component in Entry.Electrolyte.Components)
                {
                    <MudText Class="ml-10"><b>* Name:</b> @component.Name</MudText>
                    <MudText Class="ml-10"><b>Type:</b> @component.Type</MudText>
                    if (!string.IsNullOrEmpty(component.Concentration?.Unit))
                    {
                        <MudText Class="ml-10"><b>Concentration:</b></MudText>
                        <MudText Class="pl-5 ml-10"><b>Unit:</b> @component.Concentration.Unit</MudText>
                        <MudText Class="pl-5 ml-10"><b>Value:</b> @component.Concentration.Value</MudText>
                    }
                    if (!string.IsNullOrEmpty(component.Proportion?.Unit))
                    {
                        <MudText Class="ml-10"><b>Proportion:</b></MudText>
                        <MudText Class="pl-5 ml-10"><b>Unit:</b> @component.Proportion.Unit</MudText>
                        <MudText Class="pl-5 ml-10"><b>Value:</b> @component.Proportion.Value</MudText>
                    }
                    if (string.IsNullOrEmpty(component.Purity?.Grade) && !string.IsNullOrEmpty(component.Source?.Supplier))
                    {
                        <MudText Class="ml-10"><b>Source:</b></MudText>
                    }
                    if (!string.IsNullOrEmpty(component.Source?.Supplier))
                    {
                        <MudText Class="pl-5 ml-10"><b>Supplier:</b> @component.Source.Supplier</MudText>
                    }
                    if (!string.IsNullOrEmpty(component.Source?.Quality))
                    {
                        <MudText Class="pl-5 ml-10"><b>Quality:</b> @component.Source.Quality</MudText>
                    }
                    if (!string.IsNullOrEmpty(component.Source?.SuppliedPurity?.Grade?.Unit))
                    {
                        <MudText Class="pl-5 ml-10"><b>Purity grade:</b></MudText>
                        <MudText Class="pl-10 ml-10"><b>Unit:</b> @component.Source.SuppliedPurity?.Grade?.Unit</MudText>
                        <MudText Class="pl-10 ml-10"><b>Value:</b> @component.Source.SuppliedPurity?.Grade?.Value</MudText>
                    }
                    if (string.IsNullOrEmpty(component.Source?.SuppliedPurity?.Grade?.Unit) && !string.IsNullOrEmpty(component.Purity?.Grade))
                    {
                        <MudText Class="ml-10"><b>Purity:</b></MudText>
                    }
                    if (!string.IsNullOrEmpty(component.Purity?.Grade))
                    {
                        <MudText Class="pl-5 ml-10"><b>Grade:</b> @component.Purity.Grade</MudText>
                    }
                    if (!string.IsNullOrEmpty(component.Purity?.Refinement))
                    {
                        <MudText Class="pl-5 ml-10"><b>Refinement:</b> @component.Purity.Refinement</MudText>
                    }
                }
                <MudText Class="ml-5"><b>Ph:</b></MudText>
                <MudText Class="ml-10"><b>Value:</b> @Entry.Electrolyte.Ph?.Value</MudText>
                    @if (!string.IsNullOrEmpty(Entry.Electrolyte.Temperature?.Unit))
                {
                    <MudText Class="ml-5"><b>Temperature:</b></MudText>
                    <MudText Class="ml-10"><b>Unit:</b> @Entry.Electrolyte.Temperature?.Unit</MudText>
                    <MudText Class="ml-10"><b>Value:</b> @Entry.Electrolyte.Temperature?.Value</MudText>
                }
                <MudText Class="ml-5"><b>Type:</b> @Entry.Electrolyte.Type</MudText>
                <MudText Class="mt-5"><b>- Scan rate:</b></MudText>
                <MudText Class="ml-10"><b>Unit:</b> @Entry.ScanRate_unit</MudText>
                <MudText Class="ml-10"><b>Value:</b> @Entry.ScanRate_value</MudText>
            </MudPaper>
        </MudTabPanel>
        <MudTabPanel Text="Entry source">
                <MudPaper Class="pa-5 mt-n1" Square="false" Outlined="true" Style="height:590px; overflow:auto;">
                    <MudText><b>- Citation key:</b> @Entry.Source.CitationKey</MudText>
                    <MudText><b>- URL:</b> @Entry.Source.Url</MudText>
                    @if (!string.IsNullOrEmpty(Entry.Source.GetTechniques()))
                {
                    <MudText><b>- Techniques:</b> @Entry.Source.GetTechniques()</MudText>
                }
                <MudText><b>- Figure:</b> @Entry.Source.Figure</MudText>
                    <MudText><b>- Curve:</b> @Entry.Source.Curve</MudText>
                    <MudText><b>- Bibdata:</b> @Entry.Source.BibData</MudText>
            </MudPaper>
        </MudTabPanel>
        <MudTabPanel Text="Bibliography">
                <MudPaper Class="pa-5 mt-n1" Square="false" Outlined="true" Style="height:590px; overflow:auto;">
                    <MudText><b>- Type:</b> @Entry.Bibliography.Type</MudText>
                    <MudText><b>- Title:</b> @Entry.Bibliography.Title</MudText>
                    <MudText><b>- Journal:</b> @Entry.Bibliography.Journal</MudText>
                    <MudText><b>- Volume:</b> @Entry.Bibliography.Volume</MudText>
                    <MudText><b>- Number:</b> @Entry.Bibliography.Number</MudText>
                    <MudText><b>- Pages:</b> @Entry.Bibliography.Pages</MudText>
                    <MudText><b>- Year:</b> @Entry.Bibliography.Year</MudText>
                    <MudText><b>- Authors:</b> @Entry.Bibliography.GetAuthors()</MudText>
            </MudPaper>
        </MudTabPanel>
    </MudTabs>
</MudStack>

    @code {

    [Parameter]
    public CVEntry Entry { get; set; } = new();
}
